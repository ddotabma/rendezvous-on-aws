from dataclasses import dataclass, asdict
import json


@dataclass
class BostonRequest:
    CRIM: float
    ZN: float
    INDUS: float
    CHAS: float
    NOX: float
    RM: float
    AGE: float
    DIS: float
    RAD: float
    TAX: float
    PTRATIO: float
    B: float
    LSTAT: float


@dataclass
class Specifications:
    request: BostonRequest
    kinesis_stream: str

    def __post_init__(self):
        if isinstance(self.request, dict):
            self.request = BostonRequest(**self.request)  # noqa


@dataclass
class RendezvousMessage:
    uuid: str
    model: str
    datetime: str
    rendezvous_time: float
    data: Specifications

    def __post_init__(self):
        if isinstance(self.data, dict):
            self.data = Specifications(**self.data)  # noqa

    def json(self):
        return json.dumps(asdict(self))


@dataclass
class Message:
    Message: RendezvousMessage

    def __post_init__(self):
        self.Message = RendezvousMessage(**json.loads(self.Message))  # noqa


@dataclass
class BostonEvent:
    messageId: str
    receiptHandle: str
    attributes: dict
    body: Message
    md5OfBody: str
    eventSourceARN: str
    messageAttributes: str
    awsRegion: str
    eventSource: str

    def __post_init__(self):
        self.body = Message(Message=json.loads(self.body)["Message"])  # noqa


@dataclass
class ModelResponse:
    uuid: str
    start_time: float
    duration: float
    time_after_rendezvous: float
    model: str
    results: str  # json dumps

    def json(self):
        return json.dumps(asdict(self))


@dataclass
class ModelResult:
    test_score: float
    train_score: float
    price: float

    def json(self):
        return json.dumps(asdict(self))
